{"version":3,"sources":["assets/img1.svg","components/input-field/input-field.jsx","components/item/item.jsx","components/todolist/todolist.jsx","pages/home/home.jsx","components/todo/header/header.jsx","components/todo/footer/footer.jsx","components/todo/todo.jsx","pages/todo/todo.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","InputField","input","handleChange","handleClick","handleKeyDown","className","maxLength","spellCheck","value","onChange","onKeyDown","type","placeholder","onClick","Item","inputRef","React","createRef","state","props","title","e","setState","target","renderItem","id","handleDeleteItem","handleDoubleClick","handleBlur","handleCheckClick","isEditing","isComplete","onDoubleClick","ref","onBlur","key","checked","htmlFor","this","to","Component","TodoList","items","trim","newItem","Date","now","toString","preState","itemId","preventDefault","stopPropagation","filter","JSON","parse","localStorage","getItem","setItem","stringify","map","renderItems","HomePage","src","myImg","alt","Header","length","Footer","handleNavClick","handleClearClick","console","log","undefined","bind","Todo","isValidUrl","editingItem","allItems","item","taskName","date","Intl","DateTimeFormat","format","find","current","focus","newTask","filteredItems","match","params","withRouter","TodoPage","App","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.178cd42b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.7e650390.svg\";","import React from 'react'\r\nimport './input-field.scss'\r\n\r\nconst InputField = ({ input, handleChange, handleClick, handleKeyDown }) => {\r\n  return (\r\n    <div className='input'>\r\n      <input\r\n        maxLength='20'\r\n        spellCheck='false'\r\n        value={input}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        type='text'\r\n        className='input__field'\r\n        placeholder='New item ...'\r\n      />\r\n      <button onClick={handleClick} className='input__btn'></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputField\r\n","import React from 'react'\r\nimport './item.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Item extends React.Component {\r\n  inputRef = React.createRef()\r\n  state = {\r\n    input: this.props.title,\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ input: e.target.value })\r\n  }\r\n\r\n  renderItem = () => {\r\n    const {\r\n      id,\r\n      title,\r\n      handleDeleteItem,\r\n      handleDoubleClick,\r\n      handleBlur,\r\n      handleCheckClick,\r\n      isEditing,\r\n      isComplete,\r\n    } = this.props\r\n\r\n    return (\r\n      <div\r\n        className={`item ${isEditing ? 'edit' : ''} ${\r\n          isComplete ? 'hide' : ''\r\n        }`}\r\n      >\r\n        <div\r\n          className='item__show'\r\n          onDoubleClick={(e) => {\r\n            handleDoubleClick(id, this.inputRef)\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <input\r\n          maxLength='20'\r\n          spellCheck='false'\r\n          ref={this.inputRef}\r\n          value={this.state.input}\r\n          onChange={this.handleChange}\r\n          type='text'\r\n          className='item__edit-field'\r\n          onBlur={() => {\r\n            handleBlur(this.state.input)\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') handleBlur(this.state.input)\r\n          }}\r\n        />\r\n\r\n        <button\r\n          onClick={(e) => {\r\n            handleDeleteItem(e, id)\r\n          }}\r\n          className='item__delete-btn'\r\n        ></button>\r\n\r\n        {handleCheckClick && (\r\n          <>\r\n            <input\r\n              onChange={() => {\r\n                handleCheckClick(id)\r\n              }}\r\n              checked={isComplete ? true : false}\r\n              className='checkbox'\r\n              type='checkbox'\r\n              id={id}\r\n            ></input>\r\n            <label htmlFor={id} className='item__check-btn'></label>\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return this.props.handleDoubleClick ? (\r\n      this.renderItem()\r\n    ) : (\r\n      <Link to={`/todo/${this.props.id}`}>{this.renderItem()}</Link>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport './todolist.scss'\r\nimport InputField from '../input-field/input-field'\r\nimport Item from '../item/item'\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    input: '',\r\n    items: [],\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ input: e.target.value })\r\n  }\r\n\r\n  handleClick = () => {\r\n    let title = this.state.input\r\n    if (!title.trim()) return\r\n\r\n    let id = Date.now().toString()\r\n    let newItem = { id, title, items: [] }\r\n\r\n    this.setState((preState) => ({\r\n      items: [...preState.items, newItem],\r\n      input: '',\r\n    }))\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleClick(e)\r\n    }\r\n  }\r\n\r\n  handleDeleteItem = (e, itemId) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n\r\n    let items = this.state.items.filter(({ id }) => id !== itemId)\r\n    this.setState({ items })\r\n  }\r\n\r\n  componentDidMount() {\r\n    let items = JSON.parse(localStorage.getItem('todos'))\r\n    if (!items) return\r\n    this.setState({ items })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem('todos', JSON.stringify(this.state.items))\r\n  }\r\n\r\n  renderItems() {\r\n    if (!this.state.items) return\r\n    return this.state.items.map(({ title, id }) => (\r\n      <Item\r\n        handleDeleteItem={this.handleDeleteItem}\r\n        title={title}\r\n        key={id}\r\n        id={id}\r\n      />\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='todolist'>\r\n        <InputField\r\n          input={this.state.input}\r\n          handleChange={this.handleChange}\r\n          handleClick={this.handleClick}\r\n          handleKeyDown={this.handleKeyDown}\r\n        />\r\n        {this.renderItems()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport TodoList from '../../components/todolist/todolist'\r\nimport myImg from '../../assets/img1.svg'\r\nimport './home.scss'\r\n\r\nconst HomePage = () => (\r\n  <div className='home'>\r\n    <h1>ToDos</h1>\r\n    <img src={myImg} alt='home' />\r\n    <TodoList />\r\n    <blockquote>\r\n      <p>\r\n        \" It takes many good deeds to build a good reputation, and only one bad\r\n        one to lose it. \"\r\n      </p>\r\n      <cite>- Benjamin Franklin</cite>\r\n    </blockquote>\r\n    <h5>*Click to a item for editing details</h5>\r\n  </div>\r\n)\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport './header.scss'\r\n\r\nconst Header = ({ title, items }) => (\r\n  <div className='header'>\r\n    <h1 className='heading'>{title}</h1>\r\n    <p className='sub-heading'>\r\n      {`${\r\n        items.filter(({ isComplete }) => isComplete === false).length\r\n      } tasks left`}\r\n    </p>\r\n  </div>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './footer.scss'\r\n\r\nconst Footer = ({ filter, handleNavClick, handleClearClick }) => {\r\n  console.log(filter)\r\n  return (\r\n    <div className='footer'>\r\n      <span\r\n        className={filter === 'All' ? 'active' : undefined}\r\n        onClick={handleNavClick.bind(null, 'All')}\r\n      >\r\n        All\r\n      </span>\r\n      <span\r\n        className={filter === 'Active' ? 'active' : undefined}\r\n        onClick={handleNavClick.bind(null, 'Active')}\r\n      >\r\n        Active\r\n      </span>\r\n      <span\r\n        className={filter === 'Completed' ? 'active' : undefined}\r\n        onClick={handleNavClick.bind(null, 'Completed')}\r\n      >\r\n        Completed\r\n      </span>\r\n      <span onClick={handleClearClick}>Clear Completed</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport InputField from '../input-field/input-field'\r\nimport Item from '../item/item'\r\nimport './todo.scss'\r\nimport Header from './header/header'\r\nimport Footer from './footer/footer'\r\n\r\nclass Todo extends React.Component {\r\n  state = {\r\n    id: '',\r\n    title: '',\r\n    items: [],\r\n    input: '',\r\n    isValidUrl: true,\r\n    editingItem: '',\r\n    filter: 'All',\r\n  }\r\n\r\n  allItems = []\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ input: e.target.value })\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (!this.state.input.trim()) return\r\n    if (this.state.input.length > 30) return\r\n\r\n    let id = Date.now().toString()\r\n    let taskName = this.state.input\r\n    let date = new Intl.DateTimeFormat('en-GB').format(Date.now())\r\n\r\n    let item = { id, taskName, date, isComplete: false }\r\n    this.setState((preState) => ({\r\n      items: [item, ...preState.items],\r\n      input: '',\r\n    }))\r\n  }\r\n\r\n  handleDoubleClick = (id, ref) => {\r\n    let item = this.state.items.find((item) => item.id === id)\r\n    if (item.isComplete) return\r\n\r\n    this.setState({ editingItem: id }, () => {\r\n      ref.current.focus()\r\n    })\r\n  }\r\n\r\n  handleBlur = (newTask) => {\r\n    if (!newTask.trim()) return\r\n    if (newTask.length > 30) return\r\n    let items = this.state.items.map((item) =>\r\n      item.id === this.state.editingItem ? { ...item, taskName: newTask } : item\r\n    )\r\n\r\n    this.setState({ items, editingItem: '' })\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') this.handleClick()\r\n  }\r\n\r\n  handleDeleteItem = (e, itemId) => {\r\n    let items = this.state.items.filter(({ id }) => id !== itemId)\r\n\r\n    this.setState({ items })\r\n  }\r\n\r\n  handleCheckClick = (itemId) => {\r\n    let items = this.state.items.map((item) =>\r\n      item.id === itemId ? { ...item, isComplete: !item.isComplete } : item\r\n    )\r\n    this.setState({ items })\r\n  }\r\n\r\n  handleNavClick = (filter) => {\r\n    this.setState({ filter })\r\n  }\r\n\r\n  handleClearClick = () => {\r\n    let items = this.state.items.filter(\r\n      ({ isComplete }) => isComplete === false\r\n    )\r\n\r\n    this.setState({ items })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.allItems = JSON.parse(localStorage.getItem('todos'))\r\n    if (!this.allItems) return\r\n\r\n    let item = this.allItems.find(({ id }) => id === this.props.match.params.id)\r\n    if (!item) this.setState({ isValidUrl: false })\r\n    else this.setState({ id: item.id, title: item.title, items: item.items })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    let id = this.state.id\r\n    let title = this.state.title\r\n    let items = this.state.items\r\n\r\n    let allItems = this.allItems.map((item) =>\r\n      item.id === id ? { ...item, title, items } : item\r\n    )\r\n\r\n    localStorage.setItem('todos', JSON.stringify(allItems))\r\n  }\r\n\r\n  renderItems = () => {\r\n    let items = this.state.items\r\n    let filteredItems = []\r\n    switch (this.state.filter) {\r\n      case 'All':\r\n        filteredItems = items\r\n        break\r\n      case 'Completed':\r\n        filteredItems = items.filter(({ isComplete }) => isComplete === true)\r\n        break\r\n      case 'Active':\r\n        filteredItems = items.filter(({ isComplete }) => isComplete === false)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return filteredItems.map(({ id, taskName, date, isComplete }) => (\r\n      <div key={id} className='todo__item'>\r\n        <Item\r\n          key={id}\r\n          id={id}\r\n          title={taskName}\r\n          handleDoubleClick={this.handleDoubleClick}\r\n          handleBlur={this.handleBlur}\r\n          handleDeleteItem={this.handleDeleteItem}\r\n          handleCheckClick={this.handleCheckClick}\r\n          isEditing={id === this.state.editingItem}\r\n          isComplete={isComplete}\r\n        />\r\n        <span className='todo__date'>{date}</span>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    return this.state.isValidUrl ? (\r\n      <div className='todo'>\r\n        <Header title={this.state.title} items={this.state.items} />\r\n        <div className='todo__input-field'>\r\n          <InputField\r\n            input={this.state.input}\r\n            handleClick={this.handleClick}\r\n            handleChange={this.handleChange}\r\n            handleKeyDown={this.handleKeyDown}\r\n          />\r\n        </div>\r\n        {this.renderItems()}\r\n\r\n        <Footer\r\n          filter={this.state.filter}\r\n          handleNavClick={this.handleNavClick}\r\n          handleClearClick={this.handleClearClick}\r\n        />\r\n      </div>\r\n    ) : (\r\n      <Redirect to='/' />\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Todo)\r\n","import React from 'react'\r\nimport Todo from '../../components/todo/todo'\r\nimport './todo.scss'\r\n\r\nconst TodoPage = () => (\r\n  <div className='todo-page'>\r\n    <h5>*Your input value has to be under 20 characters</h5>\r\n    <h5>*Double-click the task name to edit</h5>\r\n    <Todo />\r\n  </div>\r\n)\r\n\r\nexport default TodoPage\r\n","import React from 'react'\nimport './App.css'\nimport Home from './pages/home/home.jsx'\nimport { Switch, Route } from 'react-router-dom'\nimport TodoPage from './pages/todo/todo'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Switch>\n        <Route path='/todo/:id'>\n          <TodoPage />\n        </Route>\n        <Route path='/'>\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}